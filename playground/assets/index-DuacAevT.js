import{L as V,u as k,a as Q}from"./long-DmGCVeXr.js";import{b as I}from"./index-BHN4ZNUB.js";import{L as A}from"./__vite-browser-external-D80GqXp3.js";import{R}from"./remoteFile-Dv8-F_G9.js";import{_ as Y,L as W}from"./index-BzsNbVpR.js";import"./_commonjsHelpers-DM6icglO.js";class D{constructor(e,t){this.blockPosition=e,this.dataPosition=t}toString(){return`${this.blockPosition}:${this.dataPosition}`}compareTo(e){return this.blockPosition-e.blockPosition||this.dataPosition-e.dataPosition}static min(...e){let t,n=0;for(;!t;n+=1)t=e[n];for(;n<e.length;n+=1)t.compareTo(e[n])>0&&(t=e[n]);return t}}function x(o,e=0,t=!1){if(t)throw new Error("big-endian virtual file offsets not implemented");return new D(o[e+7]*1099511627776+o[e+6]*4294967296+o[e+5]*16777216+o[e+4]*65536+o[e+3]*256+o[e+2],o[e+1]<<8|o[e])}class ${constructor(e,t,n,r){this.minv=e,this.maxv=t,this.bin=n,this._fetchedSize=r}toUniqueString(){return`${this.minv.toString()}..${this.maxv.toString()} (bin ${this.bin}, fetchedSize ${this.fetchedSize()})`}toString(){return this.toUniqueString()}compareTo(e){return this.minv.compareTo(e.minv)||this.maxv.compareTo(e.maxv)||this.bin-e.bin}fetchedSize(){return this._fetchedSize!==void 0?this._fetchedSize:this.maxv.blockPosition+65536-this.minv.blockPosition}}function X(o){return new Promise(e=>setTimeout(e,o))}function J(o){if(o.greaterThan(Number.MAX_SAFE_INTEGER)||o.lessThan(Number.MIN_SAFE_INTEGER))throw new Error("integer overflow");return o.toNumber()}function K(o){if(o&&o.aborted)if(typeof DOMException>"u"){const e=new Error("aborted");throw e.code="ERR_ABORTED",e}else throw new DOMException("aborted","AbortError")}function Z(o,e){return e.minv.blockPosition-o.maxv.blockPosition<65e3&&e.maxv.blockPosition-o.minv.blockPosition<5e6}function ee(o={}){return"aborted"in o?{signal:o}:o}function U(o,e){const t=[];let n;if(o.length===0)return o;o.sort((r,s)=>{const a=r.minv.blockPosition-s.minv.blockPosition;return a===0?r.minv.dataPosition-s.minv.dataPosition:a});for(const r of o)(!e||r.maxv.compareTo(e)>0)&&(n===void 0?(t.push(r),n=r):Z(n,r)?r.maxv.compareTo(n.maxv)>0&&(n.maxv=r.maxv):(t.push(r),n=r));return t}function z(o,e){return{lineCount:J(V.fromBytesLE(Array.prototype.slice.call(o,e,e+8),!0))}}function L(o,e){return o?o.compareTo(e)>0?e:o:e}function te(o,e=t=>t){let t=0,n=0;const r=[],s={};for(let a=0;a<o.length;a+=1)if(!o[a]){if(n<a){let h=o.toString("utf8",n,a);h=e(h),r[t]=h,s[h]=t}n=a+1,t+=1}return{refNameToId:s,refIdToName:r}}class O{constructor({filehandle:e,renameRefSeq:t=n=>n}){this.filehandle=e,this.renameRefSeq=t}}const ne=21578050;function re(o,e){return o-o%e}function se(o,e){return o-o%e+e}function ie(o,e){return e-=1,[[0,0],[1+(o>>26),1+(e>>26)],[9+(o>>23),9+(e>>23)],[73+(o>>20),73+(e>>20)],[585+(o>>17),585+(e>>17)],[4681+(o>>14),4681+(e>>14)]]}class v extends O{async lineCount(e,t){var n,r;return((r=(n=(await this.parse(t)).indices[e])===null||n===void 0?void 0:n.stats)===null||r===void 0?void 0:r.lineCount)||0}async _parse(e){const t=await this.filehandle.readFile(e);if(t.readUInt32LE(0)!==ne)throw new Error("Not a BAI file");const n=t.readInt32LE(4),s=((1<<(5+1)*3)-1)/7;let a=8,h;const c=new Array(n);for(let i=0;i<n;i++){const l=t.readInt32LE(a);let u;a+=4;const f={};for(let g=0;g<l;g+=1){const m=t.readUInt32LE(a);if(a+=4,m===s+1)a+=4,u=z(t,a+16),a+=32;else{if(m>s+1)throw new Error("bai index contains too many bins, please use CSI");{const p=t.readInt32LE(a);a+=4;const w=new Array(p);for(let E=0;E<p;E++){const y=x(t,a);a+=8;const S=x(t,a);a+=8,h=L(h,y),w[E]=new $(y,S,m)}f[m]=w}}}const d=t.readInt32LE(a);a+=4;const _=new Array(d);for(let g=0;g<d;g++){const m=x(t,a);a+=8,h=L(h,m),_[g]=m}c[i]={binIndex:f,linearIndex:_,stats:u}}return{bai:!0,firstDataLine:h,maxBlockSize:65536,indices:c,refCount:n}}async indexCov(e,t,n,r={}){const a=t!==void 0,c=(await this.parse(r)).indices[e];if(!c)return[];const{linearIndex:i=[],stats:l}=c;if(i.length===0)return[];const u=n===void 0?(i.length-1)*16384:se(n,16384),f=t===void 0?0:re(t,16384),d=a?new Array((u-f)/16384):new Array(i.length-1),_=i[i.length-1].blockPosition;if(u>(i.length-1)*16384)throw new Error("query outside of range of linear index");let g=i[f/16384].blockPosition;for(let m=f/16384,p=0;m<u/16384;m++,p++)d[p]={score:i[m+1].blockPosition-g,start:m*16384,end:m*16384+16384},g=i[m+1].blockPosition;return d.map(m=>({...m,score:m.score*((l==null?void 0:l.lineCount)||0)/_}))}async blocksForRange(e,t,n,r={}){t<0&&(t=0);const s=await this.parse(r);if(!s)return[];const a=s.indices[e];if(!a)return[];const h=ie(t,n),c=[];for(const[d,_]of h)for(let g=d;g<=_;g++)if(a.binIndex[g]){const m=a.binIndex[g];for(const p of m)c.push(p)}const i=a.linearIndex.length;let l;const u=Math.min(t>>14,i-1),f=Math.min(n>>14,i-1);for(let d=u;d<=f;++d){const _=a.linearIndex[d];_&&(!l||_.compareTo(l)<0)&&(l=_)}return U(c,l)}async parse(e={}){return this.setupP||(this.setupP=this._parse(e).catch(t=>{throw this.setupP=void 0,t})),this.setupP}async hasRefSeq(e,t={}){var n;return!!(!((n=(await this.parse(t)).indices[e])===null||n===void 0)&&n.binIndex)}}function ae(o){return o&&o.__esModule&&Object.prototype.hasOwnProperty.call(o,"default")?o.default:o}const oe=new Int32Array([0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117]);function H(o){if(Buffer.isBuffer(o))return o;if(typeof o=="number")return Buffer.alloc(o);if(typeof o=="string")return Buffer.from(o);throw new Error("input must be buffer, number, or string, received "+typeof o)}function ce(o){const e=H(4);return e.writeInt32BE(o,0),e}function T(o,e){o=H(o),Buffer.isBuffer(e)&&(e=e.readUInt32BE(0));let t=~~e^-1;for(var n=0;n<o.length;n++)t=oe[(t^o[n])&255]^t>>>8;return t^-1}function M(){return ce(T.apply(null,arguments))}M.signed=function(){return T.apply(null,arguments)};M.unsigned=function(){return T.apply(null,arguments)>>>0};var he=M;const de=ae(he),fe=21582659,le=38359875;function ue(o,e){return o*2**e}function B(o,e){return Math.floor(o/2**e)}class P extends O{constructor(){super(...arguments),this.maxBinNumber=0,this.depth=0,this.minShift=0}async lineCount(e,t){var n,r;return((r=(n=(await this.parse(t)).indices[e])===null||n===void 0?void 0:n.stats)===null||r===void 0?void 0:r.lineCount)||0}async indexCov(){return[]}parseAuxData(e,t){const n=e.readInt32LE(t),r=n&65536?"zero-based-half-open":"1-based-closed",s={0:"generic",1:"SAM",2:"VCF"}[n&15];if(!s)throw new Error(`invalid Tabix preset format flags ${n}`);const a={ref:e.readInt32LE(t+4),start:e.readInt32LE(t+8),end:e.readInt32LE(t+12)},h=e.readInt32LE(t+16),c=h?String.fromCharCode(h):"",i=e.readInt32LE(t+20),l=e.readInt32LE(t+24);return{columnNumbers:a,coordinateType:r,metaValue:h,metaChar:c,skipLines:i,format:s,formatFlags:n,...te(e.subarray(t+28,t+28+l),this.renameRefSeq)}}async _parse(e){const t=await this.filehandle.readFile(e),n=await k(t);let r;if(n.readUInt32LE(0)===fe)r=1;else if(n.readUInt32LE(0)===le)r=2;else throw new Error("Not a CSI file");this.minShift=n.readInt32LE(4),this.depth=n.readInt32LE(8),this.maxBinNumber=((1<<(this.depth+1)*3)-1)/7;const s=n.readInt32LE(12),a=s>=30?this.parseAuxData(n,16):void 0,h=n.readInt32LE(16+s);let c=16+s+4,i;const l=new Array(h);for(let u=0;u<h;u++){const f=n.readInt32LE(c);c+=4;const d={};let _;for(let g=0;g<f;g++){const m=n.readUInt32LE(c);if(c+=4,m>this.maxBinNumber)_=z(n,c+28),c+=44;else{i=L(i,x(n,c)),c+=8;const p=n.readInt32LE(c);c+=4;const w=new Array(p);for(let E=0;E<p;E+=1){const y=x(n,c);c+=8;const S=x(n,c);c+=8,i=L(i,y),w[E]=new $(y,S,m)}d[m]=w}}l[u]={binIndex:d,stats:_}}return{csiVersion:r,firstDataLine:i,indices:l,refCount:h,csi:!0,maxBlockSize:65536,...a}}async blocksForRange(e,t,n,r={}){t<0&&(t=0);const s=await this.parse(r),a=s==null?void 0:s.indices[e];if(!a)return[];const h=this.reg2bins(t,n);if(h.length===0)return[];const c=[];for(const[i,l]of h)for(let u=i;u<=l;u++)if(a.binIndex[u]){const f=a.binIndex[u];for(const d of f)c.push(d)}return U(c,new D(0,0))}reg2bins(e,t){e-=1,e<1&&(e=1),t>2**50&&(t=2**34),t-=1;let n=0,r=0,s=this.minShift+this.depth*3;const a=[];for(;n<=this.depth;s-=3,r+=ue(1,n*3),n+=1){const h=r+B(e,s),c=r+B(t,s);if(c-h+a.length>this.maxBinNumber)throw new Error(`query ${e}-${t} is too large for current binning scheme (shift ${this.minShift}, depth ${this.depth}), try a smaller query or a coarser index binning scheme`);a.push([h,c])}return a}async parse(e={}){return this.setupP||(this.setupP=this._parse(e).catch(t=>{throw this.setupP=void 0,t})),this.setupP}async hasRefSeq(e,t={}){var n;return!!(!((n=(await this.parse(t)).indices[e])===null||n===void 0)&&n.binIndex)}}const b={BAM_FPAIRED:1,BAM_FPROPER_PAIR:2,BAM_FUNMAP:4,BAM_FMUNMAP:8,BAM_FREVERSE:16,BAM_FMREVERSE:32,BAM_FREAD1:64,BAM_FREAD2:128,BAM_FSECONDARY:256,BAM_FQCFAIL:512,BAM_FDUP:1024,BAM_FSUPPLEMENTARY:2048},F="=ACMGRSVTWYHKDBN".split(""),C="MIDNSHP=X???????".split("");class me{constructor(e){this.data={},this._tagList=[],this._allTagsParsed=!1;const{bytes:t,fileOffset:n}=e,{byteArray:r,start:s}=t;this.data={},this.bytes=t,this._id=n,this._refID=r.readInt32LE(s+4),this.data.start=r.readInt32LE(s+8),this.flags=(r.readInt32LE(s+16)&4294901760)>>16}get(e){return this[e]?this.data[e]?this.data[e]:(this.data[e]=this[e](),this.data[e]):this._get(e.toLowerCase())}end(){return this.get("start")+this.get("length_on_ref")}seq_id(){return this._refID}_get(e){return e in this.data?this.data[e]:(this.data[e]=this._parseTag(e),this.data[e])}_tags(){this._parseAllTags();let e=["seq"];this.isSegmentUnmapped()||e.push("start","end","strand","score","qual","MQ","CIGAR","length_on_ref","template_length"),this.isPaired()&&e.push("next_segment_position","pair_orientation"),e=e.concat(this._tagList||[]);for(const n of Object.keys(this.data))!n.startsWith("_")&&n!=="next_seq_id"&&e.push(n);const t={};return e.filter(n=>{if(n in this.data&&this.data[n]===void 0||n==="CG"||n==="cg")return!1;const r=n.toLowerCase(),s=t[r];return t[r]=!0,!s})}parent(){}children(){return this.get("subfeatures")}id(){return this._id}mq(){const e=(this.get("_bin_mq_nl")&65280)>>8;return e===255?void 0:e}score(){return this.get("mq")}qual(){var e;return(e=this.qualRaw())===null||e===void 0?void 0:e.join(" ")}qualRaw(){if(this.isSegmentUnmapped())return;const{start:e,byteArray:t}=this.bytes,n=e+36+this.get("_l_read_name")+this.get("_n_cigar_op")*4+this.get("_seq_bytes"),r=this.get("seq_length");return t.subarray(n,n+r)}strand(){return this.isReverseComplemented()?-1:1}multi_segment_next_segment_strand(){if(!this.isMateUnmapped())return this.isMateReverseComplemented()?-1:1}name(){return this.get("_read_name")}_read_name(){const e=this.get("_l_read_name"),{byteArray:t,start:n}=this.bytes;return t.toString("ascii",n+36,n+36+e-1)}_parseTag(e){if(this._allTagsParsed)return;const{byteArray:t,start:n}=this.bytes;let r=this._tagOffset||n+36+this.get("_l_read_name")+this.get("_n_cigar_op")*4+this.get("_seq_bytes")+this.get("seq_length");const s=this.bytes.end;let a;for(;r<s&&a!==e;){const h=String.fromCharCode(t[r],t[r+1]);a=h.toLowerCase();const c=String.fromCharCode(t[r+2]);r+=3;let i;switch(c){case"A":{i=String.fromCharCode(t[r]),r+=1;break}case"i":{i=t.readInt32LE(r),r+=4;break}case"I":{i=t.readUInt32LE(r),r+=4;break}case"c":{i=t.readInt8(r),r+=1;break}case"C":{i=t.readUInt8(r),r+=1;break}case"s":{i=t.readInt16LE(r),r+=2;break}case"S":{i=t.readUInt16LE(r),r+=2;break}case"f":{i=t.readFloatLE(r),r+=4;break}case"Z":case"H":{for(i="";r<=s;){const l=t[r++];if(l===0)break;i+=String.fromCharCode(l)}break}case"B":{i="";const l=t[r++],u=String.fromCharCode(l),f=t.readInt32LE(r);if(r+=4,u==="i")if(h==="CG")for(let d=0;d<f;d++){const _=t.readInt32LE(r),g=_>>4,m=C[_&15];i+=g+m,r+=4}else for(let d=0;d<f;d++)i+=t.readInt32LE(r),d+1<f&&(i+=","),r+=4;if(u==="I")if(h==="CG")for(let d=0;d<f;d++){const _=t.readUInt32LE(r),g=_>>4,m=C[_&15];i+=g+m,r+=4}else for(let d=0;d<f;d++)i+=t.readUInt32LE(r),d+1<f&&(i+=","),r+=4;if(u==="s")for(let d=0;d<f;d++)i+=t.readInt16LE(r),d+1<f&&(i+=","),r+=2;if(u==="S")for(let d=0;d<f;d++)i+=t.readUInt16LE(r),d+1<f&&(i+=","),r+=2;if(u==="c")for(let d=0;d<f;d++)i+=t.readInt8(r),d+1<f&&(i+=","),r+=1;if(u==="C")for(let d=0;d<f;d++)i+=t.readUInt8(r),d+1<f&&(i+=","),r+=1;if(u==="f")for(let d=0;d<f;d++)i+=t.readFloatLE(r),d+1<f&&(i+=","),r+=4;break}default:console.warn(`Unknown BAM tag type '${c}', tags may be incomplete`),i=void 0,r=s}if(this._tagOffset=r,this._tagList.push(h),a===e)return i;this.data[a]=i}this._allTagsParsed=!0}_parseAllTags(){this._parseTag("")}_parseCigar(e){return e.match(/\d+\D/g).map(t=>[t.match(/\D/)[0].toUpperCase(),Number.parseInt(t,10)])}isPaired(){return!!(this.flags&b.BAM_FPAIRED)}isProperlyPaired(){return!!(this.flags&b.BAM_FPROPER_PAIR)}isSegmentUnmapped(){return!!(this.flags&b.BAM_FUNMAP)}isMateUnmapped(){return!!(this.flags&b.BAM_FMUNMAP)}isReverseComplemented(){return!!(this.flags&b.BAM_FREVERSE)}isMateReverseComplemented(){return!!(this.flags&b.BAM_FMREVERSE)}isRead1(){return!!(this.flags&b.BAM_FREAD1)}isRead2(){return!!(this.flags&b.BAM_FREAD2)}isSecondary(){return!!(this.flags&b.BAM_FSECONDARY)}isFailedQc(){return!!(this.flags&b.BAM_FQCFAIL)}isDuplicate(){return!!(this.flags&b.BAM_FDUP)}isSupplementary(){return!!(this.flags&b.BAM_FSUPPLEMENTARY)}cigar(){if(this.isSegmentUnmapped())return;const{byteArray:e,start:t}=this.bytes,n=this.get("_n_cigar_op");let r=t+36+this.get("_l_read_name");const s=this.get("seq_length");let a="",h=0,c=e.readInt32LE(r),i=c>>4,l=C[c&15];if(l==="S"&&i===s)return r+=4,c=e.readInt32LE(r),i=c>>4,l=C[c&15],l!=="N"&&console.warn("CG tag with no N tag"),this.data.length_on_ref=i,this.get("CG");for(let u=0;u<n;++u)c=e.readInt32LE(r),i=c>>4,l=C[c&15],a+=i+l,l!=="H"&&l!=="S"&&l!=="I"&&(h+=i),r+=4;return this.data.length_on_ref=h,a}length_on_ref(){return this.data.length_on_ref?this.data.length_on_ref:(this.get("cigar"),this.data.length_on_ref)}_n_cigar_op(){return this.get("_flag_nc")&65535}_l_read_name(){return this.get("_bin_mq_nl")&255}_seq_bytes(){return this.get("seq_length")+1>>1}getReadBases(){return this.seq()}seq(){const{byteArray:e,start:t}=this.bytes,n=t+36+this.get("_l_read_name")+this.get("_n_cigar_op")*4,r=this.get("_seq_bytes"),s=this.get("seq_length");let a="",h=0;for(let c=0;c<r;++c){const i=e[n+c];a+=F[(i&240)>>4],h++,h<s&&(a+=F[i&15],h++)}return a}getPairOrientation(){if(!this.isSegmentUnmapped()&&!this.isMateUnmapped()&&this._refID===this._next_refid()){const e=this.isReverseComplemented()?"R":"F",t=this.isMateReverseComplemented()?"R":"F";let n=" ",r=" ";this.isRead1()?(n="1",r="2"):this.isRead2()&&(n="2",r="1");const s=[];return this.template_length()>0?(s[0]=e,s[1]=n,s[2]=t,s[3]=r):(s[2]=e,s[3]=n,s[0]=t,s[1]=r),s.join("")}return""}_bin_mq_nl(){return this.bytes.byteArray.readInt32LE(this.bytes.start+12)}_flag_nc(){return this.bytes.byteArray.readInt32LE(this.bytes.start+16)}seq_length(){return this.bytes.byteArray.readInt32LE(this.bytes.start+20)}_next_refid(){return this.bytes.byteArray.readInt32LE(this.bytes.start+24)}_next_pos(){return this.bytes.byteArray.readInt32LE(this.bytes.start+28)}template_length(){return this.bytes.byteArray.readInt32LE(this.bytes.start+32)}toJSON(){const e={};for(const t of Object.keys(this))t.startsWith("_")||t==="bytes"||(e[t]=this[t]);return e}}function G(o){const e=o.split(/\r?\n/),t=[];for(const n of e){const[r,...s]=n.split(/\t/);r&&t.push({tag:r.slice(1),data:s.map(a=>{const h=a.indexOf(":"),c=a.slice(0,h),i=a.slice(h+1);return{tag:c,value:i}})})}return t}const j=21840194,q=65536;async function ge(o){let e=[];for await(const t of o)e=e.concat(t);return e}class _e{read(){throw new Error("never called")}stat(){throw new Error("never called")}readFile(){throw new Error("never called")}close(){throw new Error("never called")}}class pe{constructor({bamFilehandle:e,bamPath:t,bamUrl:n,baiPath:r,baiFilehandle:s,baiUrl:a,csiPath:h,csiFilehandle:c,csiUrl:i,htsget:l,yieldThreadTime:u=100,renameRefSeqs:f=d=>d}){if(this.htsget=!1,this.featureCache=new Y({cache:new W({maxSize:50}),fill:async(d,_)=>{const{chunk:g,opts:m}=d,{data:p,cpositions:w,dpositions:E}=await this._readChunk({chunk:g,opts:{...m,signal:_}});return this.readBamFeatures(p,w,E,g)}}),this.renameRefSeq=f,e)this.bam=e;else if(t)this.bam=new A(t);else if(n)this.bam=new R(n);else if(l)this.htsget=!0,this.bam=new _e;else throw new Error("unable to initialize bam");if(c)this.index=new P({filehandle:c});else if(h)this.index=new P({filehandle:new A(h)});else if(i)this.index=new P({filehandle:new R(i)});else if(s)this.index=new v({filehandle:s});else if(r)this.index=new v({filehandle:new A(r)});else if(a)this.index=new v({filehandle:new R(a)});else if(t)this.index=new v({filehandle:new A(`${t}.bai`)});else if(n)this.index=new v({filehandle:new R(`${n}.bai`)});else if(l)this.htsget=!0;else throw new Error("unable to infer index format");this.yieldThreadTime=u}async getHeaderPre(e){const t=ee(e);if(!this.index)return;const n=await this.index.parse(t),r=n.firstDataLine?n.firstDataLine.blockPosition+65535:void 0;let s;if(r){const l=r+q,u=await this.bam.read(I.Buffer.alloc(l),0,l,0,t);if(!u.bytesRead)throw new Error("Error reading header");s=u.buffer.subarray(0,Math.min(u.bytesRead,r))}else s=await this.bam.readFile(t);const a=await k(s);if(a.readInt32LE(0)!==j)throw new Error("Not a BAM file");const h=a.readInt32LE(4);this.header=a.toString("utf8",8,8+h);const{chrToIndex:c,indexToChr:i}=await this._readRefSeqs(h+8,65535,t);return this.chrToIndex=c,this.indexToChr=i,G(this.header)}getHeader(e){return this.headerP||(this.headerP=this.getHeaderPre(e).catch(t=>{throw this.headerP=void 0,t})),this.headerP}async getHeaderText(e={}){return await this.getHeader(e),this.header}async _readRefSeqs(e,t,n){if(e>t)return this._readRefSeqs(e,t*2,n);const r=t+q,{bytesRead:s,buffer:a}=await this.bam.read(I.Buffer.alloc(r),0,t,0,n);if(!s)throw new Error("Error reading refseqs from header");const h=await k(a.subarray(0,Math.min(s,t))),c=h.readInt32LE(e);let i=e+4;const l={},u=[];for(let f=0;f<c;f+=1){const d=h.readInt32LE(i),_=this.renameRefSeq(h.toString("utf8",i+4,i+4+d-1)),g=h.readInt32LE(i+d+4);if(l[_]=f,u.push({refName:_,length:g}),i=i+8+d,i>h.length)return console.warn(`BAM header is very big.  Re-fetching ${t} bytes.`),this._readRefSeqs(e,t*2,n)}return{chrToIndex:l,indexToChr:u}}async getRecordsForRange(e,t,n,r){return ge(this.streamRecordsForRange(e,t,n,r))}async*streamRecordsForRange(e,t,n,r){var s;await this.getHeader(r);const a=(s=this.chrToIndex)===null||s===void 0?void 0:s[e];if(a===void 0||!this.index)yield[];else{const h=await this.index.blocksForRange(a,t-1,n,r);yield*this._fetchChunkFeatures(h,a,t,n,r)}}async*_fetchChunkFeatures(e,t,n,r,s={}){const{viewAsPairs:a}=s,h=[];let c=!1;for(const i of e){const l=await this.featureCache.get(i.toString(),{chunk:i,opts:s},s.signal),u=[];for(const f of l)if(f.seq_id()===t)if(f.get("start")>=r){c=!0;break}else f.get("end")>=n&&u.push(f);if(h.push(u),yield u,c)break}K(s.signal),a&&(yield this.fetchPairs(t,h,s))}async fetchPairs(e,t,n){const{pairAcrossChr:r,maxInsertSize:s=2e5}=n,a={},h={};t.map(f=>{const d={};for(const _ of f){const g=_.name(),m=_.id();d[g]||(d[g]=0),d[g]++,h[m]=1}for(const[_,g]of Object.entries(d))g===1&&(a[_]=!0)});const c=[];t.map(f=>{for(const d of f){const _=d.name(),g=d.get("start"),m=d._next_pos(),p=d._next_refid();this.index&&a[_]&&(r||p===e&&Math.abs(g-m)<s)&&c.push(this.index.blocksForRange(p,m,m+1,n))}});const i=new Map,l=await Promise.all(c);for(const f of l.flat())i.has(f.toString())||i.set(f.toString(),f);return(await Promise.all([...i.values()].map(async f=>{const{data:d,cpositions:_,dpositions:g,chunk:m}=await this._readChunk({chunk:f,opts:n}),p=[];for(const w of await this.readBamFeatures(d,_,g,m))a[w.get("name")]&&!h[w.id()]&&p.push(w);return p}))).flat()}async _readRegion(e,t,n={}){const{bytesRead:r,buffer:s}=await this.bam.read(I.Buffer.alloc(t),0,t,e,n);return s.subarray(0,Math.min(r,t))}async _readChunk({chunk:e,opts:t}){const n=await this._readRegion(e.minv.blockPosition,e.fetchedSize(),t),{buffer:r,cpositions:s,dpositions:a}=await Q(n,e);return{data:r,cpositions:s,dpositions:a,chunk:e}}async readBamFeatures(e,t,n,r){let s=0;const a=[];let h=0,c=+Date.now();for(;s+4<e.length;){const i=e.readInt32LE(s),l=s+4+i-1;if(n){for(;s+r.minv.dataPosition>=n[h++];);h--}if(l<e.length){const u=new me({bytes:{byteArray:e,start:s,end:l},fileOffset:t.length>0?t[h]*256+(s-n[h])+r.minv.dataPosition+1:de.signed(e.slice(s,l))});a.push(u),this.yieldThreadTime&&+Date.now()-c>this.yieldThreadTime&&(await X(1),c=+Date.now())}s=l+1}return a}async hasRefSeq(e){var t,n;const r=(t=this.chrToIndex)===null||t===void 0?void 0:t[e];return r===void 0?!1:(n=this.index)===null||n===void 0?void 0:n.hasRefSeq(r)}async lineCount(e){var t;const n=(t=this.chrToIndex)===null||t===void 0?void 0:t[e];return n===void 0||!this.index?0:this.index.lineCount(n)}async indexCov(e,t,n){var r;if(!this.index)return[];await this.index.parse();const s=(r=this.chrToIndex)===null||r===void 0?void 0:r[e];return s===void 0?[]:this.index.indexCov(s,t,n)}async blocksForRange(e,t,n,r){var s;if(!this.index)return[];await this.index.parse();const a=(s=this.chrToIndex)===null||s===void 0?void 0:s[e];return a===void 0?[]:this.index.blocksForRange(a,t,n,r)}}async function N(o,e){const t=await Promise.all(o.map(async n=>{const{url:r,headers:s}=n;if(r.startsWith("data:"))return I.Buffer.from(r.split(",")[1],"base64");{const{referer:a,...h}=s,c=await fetch(r,{...e,headers:{...e==null?void 0:e.headers,...h}});if(!c.ok)throw new Error(`HTTP ${c.status} fetching ${r}: ${await c.text()}`);return I.Buffer.from(await c.arrayBuffer())}}));return I.Buffer.concat(await Promise.all(t.map(n=>k(n))))}class ve extends pe{constructor(e){super({htsget:!0}),this.baseUrl=e.baseUrl,this.trackId=e.trackId}async*streamRecordsForRange(e,t,n,r){var s;const h=`${`${this.baseUrl}/${this.trackId}`}?referenceName=${e}&start=${t}&end=${n}&format=BAM`,c=(s=this.chrToIndex)===null||s===void 0?void 0:s[e];if(c===void 0)yield[];else{const i=await fetch(h,{...r});if(!i.ok)throw new Error(`HTTP ${i.status} fetching ${h}: ${await i.text()}`);const l=await i.json(),u=await N(l.htsget.urls.slice(1),r);yield*this._fetchChunkFeatures([{buffer:u,_fetchedSize:void 0,bin:0,compareTo(){return 0},toUniqueString(){return`${e}_${t}_${n}`},fetchedSize(){return 0},minv:{dataPosition:0,blockPosition:0,compareTo:()=>0},maxv:{dataPosition:Number.MAX_SAFE_INTEGER,blockPosition:0,compareTo:()=>0},toString(){return`${e}_${t}_${n}`}}],c,t,n,r)}}async _readChunk({chunk:e}){if(!e.buffer)throw new Error("expected chunk.buffer in htsget");return{data:e.buffer,cpositions:[],dpositions:[],chunk:e}}async getHeader(e={}){const t=`${this.baseUrl}/${this.trackId}?referenceName=na&class=header`,n=await fetch(t,e);if(!n.ok)throw new Error(`HTTP ${n.status} fetching ${t}: ${await n.text()}`);const r=await n.json(),s=await N(r.htsget.urls,e);if(s.readInt32LE(0)!==j)throw new Error("Not a BAM file");const a=s.readInt32LE(4),h=s.toString("utf8",8,8+a),c=G(h),i=[],l={},u=c.filter(f=>f.tag==="SQ");for(const[f,d]of u.entries()){let _="",g=0;for(const m of d.data)m.tag==="SN"?_=m.value:m.tag==="LN"&&(g=+m.value);l[_]=f,i[f]={refName:_,length:g}}return this.chrToIndex=l,this.indexToChr=i,c}}export{v as BAI,pe as BamFile,me as BamRecord,P as CSI,ve as HtsgetFile};
